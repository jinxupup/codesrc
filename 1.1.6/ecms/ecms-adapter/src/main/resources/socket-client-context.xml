<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd">

	<!-- cas-adapter socket client -->
	<bean id="shortTermSocketClient" class="com.jjb.ecms.adapter.client.socket.ShortTermSocketClient">
		<property name="connector" ref="clientConnector" />
	</bean>
	<bean id="clientConnector" factory-bean="clientConnectorHelper"
		factory-method="getConnector">
		<!-- socket连接的hostname和port -->
		<property name="defaultRemoteAddress">
			<bean class="java.net.InetSocketAddress">
				<constructor-arg value="#{env['extHostName']?:''}" />
				<constructor-arg value="#{env['extPort']?:55555}" />
			</bean>
		</property>
		<!-- 连接IO处理句柄 -->
		<property name="handler">
			<bean class="com.jjb.ecms.adapter.client.socket.ShortTermClientIoHandler" />
		</property>
		<!-- 连接超时时间，单位为毫秒 -->
		<property name="connectTimeoutMillis" value="#{env['connectTimeOutMillis']?: 50000}" />
	</bean>
	<bean factory-bean="clientConnector" factory-method="getSessionConfig">
		<!-- socket连接超过#{env.idleTime}后认为连接闲置 ，单位为秒 -->
		<property name="bothIdleTime" value="#{env.idleTime}" />
	</bean>
	<!-- 消息定义 -->
	<bean id="msgDef"
		class="com.jjb.unicorn.socket.definition.MessageDefinitionFactory">
		<property name="messageDef" value="message-def.xml" />
	</bean>
	<!-- 消息头定义 -->
	<bean id="msgHeadDef"
		class="com.jjb.unicorn.socket.definition.MessageDefinitionFactory">
		<property name="messageDef" value="unifiedMessageHead-def.xml" />
	</bean>
	<bean id="clientConnectorHelper" class="com.jjb.unicorn.socket.YakNioConnectorHelper">
	<!-- socket处理过滤器列表，依据从上到下的顺序 -->
		<property name="ioFilters">
			<list>
				<!-- 日志过滤器 -->
				<bean class="org.apache.mina.filter.logging.LoggingFilter">
					<constructor-arg value="com.jjb.ecms.adapter.client.socket.ShortTermSocketClient" />
				</bean>
				<!-- 协议编解码过滤器 -->
				<bean class="org.apache.mina.filter.codec.ProtocolCodecFilter">
					<constructor-arg>
						<bean class="com.jjb.unicorn.socket.codec.LVMessageEncoder">
							<property name="lengthType" value="STRING" />
							<property name="lengthSize" value="#{env['lvMsgLength'?:8]}" />
							<property name="filterChain">
								<bean class="com.jjb.unicorn.socket.codec.YakUnifiedEncodeFilterChain">
									<property name="txnMode" value="#{env['txnMode']?: 0}" />
									<property name="messageDefinition" ref="msgDef" />
									<property name="msgHeadDef" ref="msgHeadDef" />
									<property name="chain">
										<!-- 编解码过滤器链 -->
										<list>
											<bean class="com.jjb.unicorn.socket.codec.XmlEncoderFilter">
											</bean>
											<bean class="com.jjb.unicorn.socket.codec.Default8583CodecFilter">
												<property name="codecScope" value="BODY" />
											</bean>
											<bean class="com.jjb.unicorn.socket.codec.DefaultFieldsOnlyCodecFilter">
												<property name="codecScope" value="HEAD" />
											</bean>
											<bean class="com.jjb.unicorn.socket.codec.UnifiedHeaderCodecFilter">
											</bean>
										</list>
									</property>
								</bean>
							</property>
						</bean>
					</constructor-arg>
					<constructor-arg>
						<bean class="com.jjb.unicorn.socket.codec.LVMessageDecoder">
							<property name="lengthType" value="STRING" />
							<property name="lengthSize" value="#{env['lvMsgLength'?:8]}" />
							<property name="filterChain">
								<bean class="com.jjb.unicorn.socket.codec.YakUnifiedDecodeFilterChain">
									<property name="txnMode" value="#{env['txnMode']?: 0}" />
									<property name="messageDefinition" ref="msgDef" />
									<property name="msgHeadDef" ref="msgHeadDef" />
									<property name="chain">
										<!-- 解码过滤器链 -->
										<list>
											<bean class="com.jjb.unicorn.socket.codec.UnifiedHeaderCodecFilter">
											</bean>
											<bean class="com.jjb.unicorn.socket.codec.DefaultFieldsOnlyCodecFilter">
												<property name="codecScope" value="HEAD" />
											</bean>
											<bean class="com.jjb.unicorn.socket.codec.Default8583CodecFilter">
												<property name="codecScope" value="BODY" />
											</bean>
											<bean class="com.jjb.unicorn.socket.codec.XmlDecoderFilter">
												<property name="lengthSize" value="#{env['lvMsgLength'?:8]}"/>
											</bean>
										</list>
									</property>
								</bean>
							</property>
						</bean>
					</constructor-arg>
				</bean>
			</list>
		</property>
	</bean>
</beans>
